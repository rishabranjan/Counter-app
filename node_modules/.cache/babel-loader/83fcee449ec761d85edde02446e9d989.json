{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: this.props.value // tags: [\"tag1\",\"tag2\",\"tag3\"]\n\n    };\n\n    this.handleIncrement = product => {\n      console.log(product);\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.reset = () => {\n      let count = this.state.count;\n      count = 0;\n      this.setState({\n        count\n      });\n    };\n\n    this.delete = () => {\n      let count = this.state.filter();\n    };\n\n    this.formatCount = () => {\n      const count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge badge-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: () => this.handleIncrement(this.props.id),\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.reset,\n      className: \"btn1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      onClick: this.delete,\n      className: \"btn1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["F:\\react\\counter-app\\src\\components\\counter.jsx"],"names":["React","Component","Counter","state","count","props","value","handleIncrement","product","console","log","setState","reset","delete","filter","formatCount","render","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,KADf,CAEJ;;AAFI,KADoB;;AAAA,SAM5BC,eAN4B,GAMTC,OAAD,IAAa;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAiB;AAAzB,OAAd;AACH,KAT2B;;AAAA,SAW5BQ,KAX4B,GAWpB,MAAM;AACV,UAAIR,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACAA,MAAAA,KAAK,GAAG,CAAR;AACA,WAAKO,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACH,KAf2B;;AAAA,SAiB5BS,MAjB4B,GAiBnB,MAAM;AACX,UAAIT,KAAK,GAAG,KAAKD,KAAL,CAAWW,MAAX,EAAZ;AACH,KAnB2B;;AAAA,SAkC5BC,WAlC4B,GAkCd,MAAK;AAAA,YACRX,KADQ,GACC,KAAKD,KADN,CACRC,KADQ;AAEf,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH,KArC2B;AAAA;;AAqB5BY,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,KAAKD,WAAL,EAA3C,CADI,EAEJ;AAAQ,MAAA,OAAO,EAAG,MAAK,KAAKR,eAAL,CAAqB,KAAKF,KAAL,CAAWY,EAAhC,CAAvB;AAA4D,MAAA,SAAS,EAAC,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFI,EAGJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,KAAKL,KAAtB;AAA6B,MAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA;AAAQ,MAAA,OAAO,EAAE,KAAKC,MAAtB;AAA8B,MAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CAHI,CAAR;AAUH;;AAhC2B;;AAwChC,eAAeX,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {  \r\n        count : this.props.value\r\n        // tags: [\"tag1\",\"tag2\",\"tag3\"]\r\n    }; \r\n\r\n    handleIncrement = (product) => {\r\n        console.log(product);\r\n        this.setState({count: this.state.count+1});\r\n    };\r\n\r\n    reset = () => {\r\n        let count = this.state.count\r\n        count = 0\r\n        this.setState({count});\r\n    };\r\n\r\n    delete = () => {\r\n        let count = this.state.filter()\r\n    }\r\n\r\n    render() { \r\n        return (<div>\r\n            <span className=\"badge badge-primary m-2\">{this.formatCount()}</span>\r\n            <button onClick={ ()=> this.handleIncrement(this.props.id)} className=\"btn\">Increment</button>\r\n            <React.Fragment>\r\n            <button onClick={this.reset} className=\"btn1\">Reset</button>\r\n            <button onClick={this.delete} className=\"btn1\">Delete</button>\r\n            </React.Fragment>  \r\n            {/* <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul> */}\r\n            </div>\r\n            );\r\n    }\r\n\r\n    formatCount = ()=> {\r\n        const {count} = this.state;\r\n        return count === 0 ? \"Zero\" : count;\r\n    }\r\n}\r\n \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}