{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 1,\n        value: 0\n      }, {\n        id: 1,\n        value: 0\n      }] // tags: [\"tag1\",\"tag2\",\"tag3\"]\n\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        count: this.state.count = 0\n      });\n    };\n\n    this.formatCount = () => {\n      const count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge badge-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.reset,\n      className: \"btn1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"reset\")));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["F:\\react\\counter-app\\src\\components\\counter.jsx"],"names":["React","Component","Counter","state","count","id","value","handleIncrement","setState","reset","formatCount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAG,CACJ;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OADI,EAEJ;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAFI,EAGJ;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAHI,EAIJ;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAJI,CADJ,CAOJ;;AAPI,KADoB;;AAAA,SAW5BC,eAX4B,GAWV,MAAM;AACpB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAiB;AAAzB,OAAd;AACH,KAb2B;;AAAA,SAe5BK,KAf4B,GAepB,MAAM;AACV,WAAKD,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAd;AACH,KAjB2B;;AAAA,SAgC5BM,WAhC4B,GAgCd,MAAK;AAAA,YACRN,KADQ,GACC,KAAKD,KADN,CACRC,KADQ;AAEf,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH,KAnC2B;AAAA;;AAmB5BO,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,KAAKD,WAAL,EAA3C,CADI,EAEJ;AAAQ,MAAA,OAAO,EAAE,KAAKH,eAAtB;AAAuC,MAAA,SAAS,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFI,EAGJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAQ,MAAA,OAAO,EAAE,KAAKE,KAAtB;AAA6B,MAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,CAHI,CAAR;AAUH;;AA9B2B;;AAsChC,eAAeP,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {  \r\n        count : [\r\n            {id:1,value:0},\r\n            {id:2,value:0},\r\n            {id:1,value:0},\r\n            {id:1,value:0}\r\n        ]\r\n        // tags: [\"tag1\",\"tag2\",\"tag3\"]\r\n    }; \r\n\r\n    handleIncrement = () => {\r\n        this.setState({count: this.state.count+1});\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({count: this.state.count = 0});\r\n    };\r\n\r\n    render() { \r\n        return (<div>\r\n            <span className=\"badge badge-primary m-2\">{this.formatCount()}</span>\r\n            <button onClick={this.handleIncrement} className=\"btn\">Increment</button>\r\n            <React.Fragment>\r\n            <br/>\r\n            <button onClick={this.reset} className=\"btn1\">reset</button>\r\n            </React.Fragment>  \r\n            {/* <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul> */}\r\n            </div>\r\n            );\r\n    }\r\n\r\n    formatCount = ()=> {\r\n        const {count} = this.state;\r\n        return count === 0 ? \"Zero\" : count;\r\n    }\r\n}\r\n \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}